"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[465],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},502:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:2},o="useSprings",s={unversionedId:"Hooks/useSprings",id:"Hooks/useSprings",title:"useSprings",description:"Overview",source:"@site/docs/Hooks/useSprings.md",sourceDirName:"Hooks",slug:"/Hooks/useSprings",permalink:"/roact-spring/docs/Hooks/useSprings",draft:!1,editUrl:"https://github.com/chriscerie/roact-spring/edit/master/docs/Hooks/useSprings.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"useSpring",permalink:"/roact-spring/docs/Hooks/useSpring"},next:{title:"useTrail",permalink:"/roact-spring/docs/Hooks/useTrail"}},l={},p=[{value:"Overview",id:"overview",level:2},{value:"Either: declaratively overwrite values to change the animation",id:"either-declaratively-overwrite-values-to-change-the-animation",level:3},{value:"Or: pass a function that returns values, and imperatively update using the api",id:"or-pass-a-function-that-returns-values-and-imperatively-update-using-the-api",level:3},{value:"Finally: apply styles to components",id:"finally-apply-styles-to-components",level:3},{value:"Properties",id:"properties",level:2},{value:"Demos",id:"demos",level:2},{value:"Draggable list",id:"draggable-list",level:3}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"usesprings"},"useSprings"),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Creates multiple springs, each with its own config. Use it for static lists, etc."),(0,i.kt)("h3",{id:"either-declaratively-overwrite-values-to-change-the-animation"},"Either: declaratively overwrite values to change the animation"),(0,i.kt)("p",null,"If you re-render the component with changed props, the animation will update."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"local springProps = {}\nlocal length = #items\nfor index, item in ipairs(items) do\n    table.insert(springProps, {\n        transparency = if toggles[i] then 1 else 0,\n    })\nend\nlocal springs = RoactSpring.useSprings(length, springProps)\n")),(0,i.kt)("p",null,"If you want the animation to run on mount, you can use ",(0,i.kt)("inlineCode",{parentName:"p"},"from")," to set the initial value."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"local springProps = {}\nlocal length = #items\nfor index, item in ipairs(items) do\n    table.insert(springProps, {\n        from = { transparency = item.transparency },\n        to = { transparency = if toggles[i] then 1 else 0 },\n    })\nend\nlocal springs = RoactSpring.useSprings(length, springProps)\n")),(0,i.kt)("h3",{id:"or-pass-a-function-that-returns-values-and-imperatively-update-using-the-api"},"Or: pass a function that returns values, and imperatively update using the api"),(0,i.kt)("p",null,"You will get an API table back. It will not automatically animate on mount and re-render, but you can call ",(0,i.kt)("inlineCode",{parentName:"p"},"api.start")," to start the animation. Handling updates like this is generally preferred as it's more powerful. Further documentation can be found in ",(0,i.kt)("a",{parentName:"p",href:"/docs/common/imperatives"},"Imperatives"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"local length = #items\nlocal springs, api = RoactSpring.useSprings(length, function(index)\n    return { transparency = items[index].transparency }\nend)\n\n-- Start animations\napi.start(function(index)\n    return { position = UDim2.fromScale(0.5 * index, 0.16) }\nend)\n-- Stop all springs\napi.stop()\n")),(0,i.kt)("h3",{id:"finally-apply-styles-to-components"},"Finally: apply styles to components"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'local contents = {}\nfor i = 1, 4 do\n    contents[i] = React.createElement("Frame", {\n        Position = springs[i].position,\n        Size = UDim2.fromScale(0.3, 0.3),\n    })\nend\nreturn contents\n')),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("p",null,"All properties documented in the ",(0,i.kt)("a",{parentName:"p",href:"/docs/common/props"},"common props")," apply."),(0,i.kt)("h2",{id:"demos"},"Demos"),(0,i.kt)("h3",{id:"draggable-list"},"Draggable list"),(0,i.kt)("a",{href:"https://github.com/chriscerie/roact-spring/blob/main/stories/hooks/useSpringsList.story.lua"},(0,i.kt)("img",{src:"https://media.giphy.com/media/4qOEZ93YjhfKtSlx7b/giphy.gif",width:"400"})))}d.isMDXComponent=!0}}]);